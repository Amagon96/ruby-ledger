require "thor"
 
class MyCLI < Thor

  desc "hello NAME", "say hello to NAME"
  option :from
  def hello(name)
    puts "from: #{options[:from]}" if options[:from]
    puts "Hello #{name}"
  end

  desc "ledger FILE", "Read a specified ledger file"
  def ledger(fileName)
    if !fileName.include?(".Ledger")
      fileName = fileName + ".Ledger"
    end
    num_line = 0;
    File.foreach(Dir.home()+"/"+fileName).with_index do |line|
      if line.match(/\d{4}\/\d{1,2}\/\d{1,2}/)
        date = line.match(/\d{4}\/\d{1,2}\/\d{1,2}/)
      elsif line.match(/[^\d{4}\/\d{1,2}\/\d{1,2}]+/)
        desc = line.match(/[^\d{4}\/\d{1,2}\/\d{1,2}]+/)
      elsif line.match(/\-?\$?\d+\.?\d+$/)
        amount = line.match(/\-?\$?\d+\.?\d+$/)
      elsif line.match(/[^\-?\$?\d+\.?\d+$]+/)
        desc = line.match(/[^\-?\$?\d+\.?\d+$]+/)
      end
      
    end
  end
end

MyCLI.start(ARGV)